language: c
sudo: false
dist: xenial

os:
  - linux

compiler:
  - gcc

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - lcov
  
branches:
  - openvx_1.3

before_script:
  - git submodule sync --recursive
  - git submodule update --init --recursive --remote
   
script:
  - python Build.py --os=Linux --conf=Release
  - python Build.py --os=Linux --conf=Debug
  - export OPENVX_DIR=$(pwd)/install/Linux/x64/Debug
  - export VX_TEST_DATA_PATH=$(pwd)/cts/test_data/
  # Travis Mode -- OpenVX Conformance for Vision, Enhanced Vision, & Neural Net [Can not run CI longer than 30 min on Travis Open Source Version]
  - mkdir build-cts-travis-mode
  - rm -rf install/Linux/x64/Debug
  - python Build.py --os=Linux --arch=64 --conf=Debug --conf_vision --enh_vision --conf_nn --c_flags="-Wall -fprofile-arcs -ftest-coverage"
  - cd build-cts-travis-mode
  - cmake -DOPENVX_INCLUDES=$OPENVX_DIR/include -DOPENVX_LIBRARIES=$OPENVX_DIR/bin/libopenvx.so\;$OPENVX_DIR/bin/libvxu.so\;pthread\;dl\;m\;rt -DOPENVX_CONFORMANCE_VISION=ON -DOPENVX_USE_ENHANCED_VISION=ON -DOPENVX_CONFORMANCE_NEURAL_NETWORKS=ON ../cts/
  - cmake --build .
  - LD_LIBRARY_PATH=./lib ./bin/vx_test_conformance
  - cd ../
  # Mode:1 -- OpenVX Conformance for Vision
  - mkdir build-cts-mode-1
  - rm -rf install/Linux/x64/Debug
  - python Build.py --os=Linux --arch=64 --conf=Debug --conf_vision
  - cd build-cts-mode-1
  - cmake -DOPENVX_INCLUDES=$OPENVX_DIR/include -DOPENVX_LIBRARIES=$OPENVX_DIR/bin/libopenvx.so\;$OPENVX_DIR/bin/libvxu.so\;pthread\;dl\;m\;rt -DOPENVX_CONFORMANCE_VISION=ON ../cts/
  - cmake --build .
  #- LD_LIBRARY_PATH=./lib ./bin/vx_test_conformance [RUN Disabled]
  - cd ../
  # Mode:2 -- OpenVX Conformance for Vision & Enhanced Vision
  - mkdir build-cts-mode-2
  - rm -rf install/Linux/x64/Debug
  - python Build.py --os=Linux --arch=64 --conf=Debug --conf_vision --enh_vision
  - cd build-cts-mode-2
  - cmake -DOPENVX_INCLUDES=$OPENVX_DIR/include -DOPENVX_LIBRARIES=$OPENVX_DIR/bin/libopenvx.so\;$OPENVX_DIR/bin/libvxu.so\;pthread\;dl\;m\;rt -DOPENVX_CONFORMANCE_VISION=ON -DOPENVX_USE_ENHANCED_VISION=ON ../cts/
  - cmake --build .
  #- LD_LIBRARY_PATH=./lib ./bin/vx_test_conformance [RUN Disabled]
  - cd ../
  # Mode:3 -- OpenVX Conformance for Neural Net
  - mkdir build-cts-mode-3
  - rm -rf install/Linux/x64/Debug
  - python Build.py --os=Linux --arch=64 --conf=Debug --conf_nn
  - cd build-cts-mode-3
  - cmake -DOPENVX_INCLUDES=$OPENVX_DIR/include -DOPENVX_LIBRARIES=$OPENVX_DIR/bin/libopenvx.so\;$OPENVX_DIR/bin/libvxu.so\;pthread\;dl\;m\;rt -DOPENVX_CONFORMANCE_NEURAL_NETWORKS=ON ../cts/
  - cmake --build .
  #- LD_LIBRARY_PATH=./lib ./bin/vx_test_conformance [RUN Disabled]
  - cd ../
  # Mode:4 -- OpenVX Conformance for NNEF Import
  # -- TBD --
  # Mode:5 -- OpenVX Conformance for Vision, Enhanced Vision, Neural Net, TBD:(NNEF Import), Import/Export, TBD:(NN_16, & Binary)
  - mkdir build-cts-mode-5
  - rm -rf install/Linux/x64/Debug
  - python Build.py --os=Linux --arch=64 --conf=Debug --conf_vision --enh_vision --conf_nn --nn --ix
  - cd build-cts-mode-5
  - cmake -DOPENVX_INCLUDES=$OPENVX_DIR/include -DOPENVX_LIBRARIES=$OPENVX_DIR/bin/libopenvx.so\;$OPENVX_DIR/bin/libvxu.so\;pthread\;dl\;m\;rt -DOPENVX_CONFORMANCE_VISION=ON -DOPENVX_USE_ENHANCED_VISION=ON -DOPENVX_CONFORMANCE_NEURAL_NETWORKS=ON -DOPENVX_USE_NN=ON -DOPENVX_USE_IX=ON ../cts/
  - cmake --build .
  #- LD_LIBRARY_PATH=./lib ./bin/vx_test_conformance [RUN Disabled]
  - cd ../
  # Mode:6 -- OpenVX Conformance for Vision, Enhanced Vision, Pipelining, & Streaming
  - rm -rf install/Linux/x64/Debug
  - python Build.py --os=Linux --arch=64 --conf=Debug --conf_vision --enh_vision --pipelining --streaming

after_success:
  - lcov --directory . --capture --output-file coverage.info
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info
  - lcov --list coverage.info
  - bash <(curl -s https://codecov.io/bash) || echo "codecov did not collect coverage reports"

notifications:
  email:
    - kiritigowda@gmail.com
    - jesse.villarreal@ti.com
    - brill@cadence.com
